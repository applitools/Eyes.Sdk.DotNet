language: csharp
solution: Eyes.Sdk.DotNet_Travis.sln

node_js:
  - "14"

os: linux
dist: xenial

services:
  - docker

branches:
  except:
  - /^[a-zA-Z]+_\d+(\.\d+)+$/

#addons:
#  chrome: stable
#  firefox: latest

git:
  depth: 3
  submodules: false

before_install:
  - echo -e "\n\nmachine github.com\n  login $GITHUB_TOKEN\n" >~/.netrc
  - git submodule update --init --recursive
  - nvm install node

before_script:
  - latestChromeDriverURL=$(wget http://chromedriver.storage.googleapis.com/LATEST_RELEASE -q -O -)
  - wget "http://chromedriver.storage.googleapis.com/${latestChromeDriverURL}/chromedriver_linux64.zip"
  - unzip chromedriver_linux64.zip -d /home/travis/build/
  #- wget -N https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz -P ~/
  #- tar -xzf ~/geckodriver-v0.26.0-linux64.tar.gz -C ~/
  #- rm ~/geckodriver-v0.26.0-linux64.tar.gz
  #- sudo mv -f ~/geckodriver /home/travis/build/
  #- sudo chmod +x /home/travis/build/geckodriver
  - export CHROME_BIN=chromium-browser
  - export DRIVER_PATH=/home/travis/build/
  - export APPLITOOLS_REPORT_ID=${TRAVIS_COMMIT:0:7}-$TRAVIS_BUILD_NUMBER
  - sudo apt-get install -y libgdiplus
  #- export APPLITOOLS_PROXY=http://127.0.0.1:8080
  #- sudo chmod +x ./setup_proxy.sh && ./setup_proxy.sh
  - echo "Travis event type is $TRAVIS_EVENT_TYPE"
  - if [[ $TRAVIS_EVENT_TYPE = cron ]]; then
      export APPLITOOLS_FULL_COVERAGE=true;
    fi
  - if [[ $TRAVIS_TAG =~ ^RELEASE_CANDIDATE ]]; then
      python updateChangelogAndProjectFiles.py;
    fi
  - if [[ tag =~ ^RELEASE_CANDIDATE && fork == false ]]; then
      export TEST_REPORT_SANDBOX=false;
    else
      export TEST_REPORT_SANDBOX=true;
    fi

# after_script:
#   - pkill mitmdump
#   - sleep 5
#   - ls -la network*
#   - gzip network.dump
#   - sudo chmod +x ./upload_to_azure.sh && ./upload_to_azure.sh ${AZ_SAS_SIG}

# env variables
# $RELEASE_BRANCH
# $GITHUB_TOKEN
# $ALLOWED_RELEASE_COMMITERS
# $SDK
jobs:
  include:
    #- stage: Test
    #  name: Generic Tests
    #  script:
    #    - chmod +x ./genericTests.sh && ./genericTests.sh

    - stage: Test
      name: Images
      mono: latest
      install:
        - nuget restore Eyes.Sdk.DotNet_Travis.sln
        - nuget install NUnit.Console -Version 3.9.0 -OutputDirectory testrunner
      script:
        - msbuild /p:Configuration=Release Eyes.Sdk.DotNet_Travis.sln
        - mono ./testrunner/NUnit.ConsoleRunner.3.9.0/tools/nunit3-console.exe ./Tests/Test.Eyes.Images.DotNet/bin/Release/net48/Test.Eyes.Images.DotNet.dll
     #   - chmod +x ./buildProjects.sh && ./buildProjects.sh Tests/Test.Eyes.Images.DotNet/*.csproj
  
    - name: Core
      mono: none
      dotnet: 3.1.407
      script:
        - chmod +x ./buildProjects.sh && ./buildProjects.sh Tests/Test.Eyes.Sdk.Core.DotNet/*.csproj
  
    #- name: Appium
    #  script:
    #    - chmod +x ./buildProjects.sh && ./buildProjects.sh Tests/Test.Eyes.Appium.DotNet/*.csproj
    #
    #- name: Selenium
    #  script:
    #    - pushd Eyes.Selenium.DotNet/Properties/NodeResources
    #    - npm install
    #    - popd
    #    - chmod +x ./buildProjects.sh && ./buildProjects.sh Tests/Test.Eyes.Selenium.DotNet/*.csproj

    - stage: Full Regression Mail
      if: type = cron AND branch = master
      script:
        - chmod +x ./sendFullCoverageReport.sh && ./sendFullCoverageReport.sh

    - stage: Deploy
      if: tag =~ ^RELEASE_CANDIDATE AND fork == false
      script:
        - chmod +x ./deploy.sh && ./deploy.sh
        - chmod +x ./sendMail.sh && ./sendMail.sh